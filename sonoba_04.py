# -*- coding: utf-8 -*-
"""sonoba_04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10XKabMpuzaRSp-DdmdXnVkBEBlNtjTyD
"""

import matplotlib.pyplot as plt
import math
import numpy as np

#thetaに関するlistを返す。theta1からtheta2までを等間隔に分けたものを折り返し、それをnT回繰り返す。
def th(theta1,theta2,dt,nT):
  dth=(theta2-theta1)*dt
  ret=[]
  for i in range(int((theta2-theta1)/dth)):
    ret.append(theta1+i*dth)
  for i in range(int((theta2-theta1)/dth)):
    ret.append(theta2-i*dth)
  ret*=nT
  return ret

#thetaに対応するphiの変化率を返す。
def dotphi(A,B,theta):
  return (A-B*np.cos(theta))/(np.sin(theta))**2

#phiの各theta時での変位のリストを返す。最初は0。
def phi(A,B,theta1,theta2,dt,nT):
  dp=list(map(lambda x:dotphi(A,B,x),th(theta1,theta2,dt,nT)))
  p=[]
  p.append(0)
  dth=(theta2-theta1)/dt
  for i in range(len(dp)):
    p.append(p[i]+dp[i]*dt)
  return p

#上記の関数らを用いて値を計算し描画する。A,Bは運動の積分、Tはthetaの等分数、nTは繰り返し回数。
def calc_graph(A,B,theta1,theta2,T,nT):
  dt=1/T
  theta=th(theta1,theta2,dt,nT)
  p=phi(A,B,theta1,theta2,dt,nT)
  x=[]
  y=[]
  for i in range(len(theta)):
    x.append(np.sin(theta[i])*np.cos(p[i]))
    y.append(np.sin(theta[i])*np.sin(p[i]))
  plt.plot(x,y,color='black')
  plt.gca().set_aspect('equal')
  print(len(theta))
  plt.show()

calc_graph(A=2,B=-3,theta1=np.pi/3,theta2=np.pi*6/7,T=1000,nT=3)